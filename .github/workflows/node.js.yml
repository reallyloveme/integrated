LastWhisper LastWhisper
 主页
 分类 
 标签
 项目 
 关于我 TimeLine GitHub 
GitHub-Action自动部署到阿里云
LastWhisper 2020-07-19 123 git


#前言
GitHub Actions 是 GitHub 的持续集成服务，于2018年10月推出。 持续集成由很多操作组成，比如抓取代码、运行测试、登录远程服务器，发布到第三方服务等等。GitHub 把这些操作就称为 actions

并且GitHub 做了一个官方市场，如果你需要某个 action，不必自己写复杂的脚本，直接引用他人写好的 action 即可

#自动部署到阿里云
Github Action实现功能:每次代码push到仓库,自动打包发布到域名下

下面以自动部署博客为例

部署环境: (github/阿里云ECS服务器: CentOS 8.2 64位)

#私钥配置与yml编写
#创建密钥


或者：

$ ssh root@114.45.242.55 // 连接远程服务器,以root用户登录,也可以adduser添加用户
 - 输入服务器密码:******
$ cd ~ // 也可以省略,默认就在根目录
$ ssh-keygen -t rsa -C autodeployment -f deployment // 生成公钥与私钥
$ cat deployment.pub >> ~/.ssh/authorized_keys // 将公钥写入.ssh/authorized_keys
$ vim ~/.ssh/authorized_keys // vim查看,此时authorized_keys会多出密钥
$ vim deployment // 拷贝deployment内容到github
#github私钥
进入代码仓库 => Settigngs => 左侧Secrets => 复制私钥



#github action工作流创建
因为是Node.js项目,所以选中Node.js > Set up this workflow



#yml配置
# 可以按需求修改,比如push,pull_requesy某个分支时执行CI
# 因为我是yarn,如果npm就直接使用npm
# 某个步骤报错,action执行的时候也可能显示通过图标,小心踩坑
name: Node.js CI

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    # 如果写了测试用例,也可以自动测试
    - run: yarn install
    - run: yarn build
      env:
        CI: true
    - name: Deploy
      # 使用此action，也可在官方市场选择其他action
      uses: easingthemes/ssh-deploy@v2.0.7
      env:
        # Private Key secrets.ALIYUN就是刚才配置的密钥名
        SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        # For any initial/required rsync flags
        ARGS:  "-rltgoDzvO --delete"
        # Source directory dist/ 需要到远端服务器的文件目录 **填入自己的打包路径**
        SOURCE: "dist/"
        # Remote host **填入自己的域名**
        REMOTE_HOST: "39.99.202.177"
        # Remote user **填入自己的用户,一般都是root用户**
        REMOTE_USER: "root"
        # Target directory 此处填写的是我博客域名下的action pacth下 **填入自己的域名路径**
        TARGET: "/root/web/really"
